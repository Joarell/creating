#  ╭──────────────────────────────────────────────────────────╮
#  │                    Networks settings                     │
#  ╰──────────────────────────────────────────────────────────╯
networks:
  back-tier:
    driver: bridge
    name: back_end
  front-tier:
    driver: bridge
    name: front_end


services:

#  ╭──────────────────────────────────────────────────────────╮
#  │               cloudflare tunnel container.               │
#  ╰──────────────────────────────────────────────────────────╯
  # tunnel:
  #   command: tunnel run
  #
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     resources:
  #       limits:
  #         cpus: '0.75'
  #         memory: 512M
  #       reservations:
  #         cpus: '0.50'
  #         memory: 100M
  #
  #   env_file: .env
  #   environment:
  #     - TUNNEL_TOKEN=${CLOUD_TOKEN}
  #
  #   image: cloudflare/cloudflared:latest
  #   restart: unless-stopped

#  ╭──────────────────────────────────────────────────────────╮
#  │    Authorization and authentication container server     │
#  ╰──────────────────────────────────────────────────────────╯
  auth_server:
    command: yarn start
    depends_on:
      - web_app
      - db
    deploy:
      mode: replicated
      replicas: 3
      resources:
        limits:
          cpus: '0.75'
          memory: 512M
        reservations:
          cpus: '0.50'
          memory: 100M

    env_file: .env
    environment:
      DB_HOST: ${PG_HOST}
      DB_NAME: ${PG_DB}
      DB_PASSWORD: ${PG_PASS}
      DB_PORT: ${DB_PORT}
      DB_USER: ${PG_USER}
      NODE_ENV: development
    expose:
      - ${PORT}
    image: node:21.7-alpine3.19
    networks:
      # - front-tier
      - back-tier
    # ports:
    #   - "${PORT}:${PORT}"
    restart: on-failure
    volumes:
      - ../:/usr/api
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone/:/etc/timezone:ro
    working_dir: /usr/api


#  ╭──────────────────────────────────────────────────────────╮
#  │               Database Postgres container                │
#  ╰──────────────────────────────────────────────────────────╯
  db:
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.75'
          memory: 512M
        reservations:
          cpus: '0.50'
          memory: 100M

    container_name: postgres_container
    env_file: .env
    environment:
      PGHOST: ${PG_HOST}
      PGPORT: ${DB_PORT}
      POSTGRES_DB: ${PG_DB}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_USER: ${PG_USER}
    expose:
      - "5432"
    image: postgres:16-alpine3.18
    networks:
      - back-tier
    ports:
      - "${DB_PORT}:${DB_PORT}"
    restart: on-failure
    volumes:
      - ../database/DB/data/:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone/:/etc/timezone:ro


# ╭──────────────────────────────────────────────────────────╮
# │               Main app container settings                │
# ╰──────────────────────────────────────────────────────────╯
  web_app:
    command: yarn start
    # depends_on:
    #   - postgres_container
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.75'
          memory: 512M
        reservations:
          cpus: '0.50'
          memory: 100M

    env_file: .env
    expose:
      - ${PORT1}
    image: node:21.7-alpine3.19
    networks:
      - front-tier

    restart: on-failure
    volumes:
      - ../otto/:/crater/app
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone/:/etc/timezone:ro

    working_dir: /crater/app
    # TODO: try out another work directory to pass the '/', as a root path.


#  ╭──────────────────────────────────────────────────────────╮
#  │                 Proxy container settings                 │
#  ╰──────────────────────────────────────────────────────────╯
  reverse_proxy:
    # build:
    #   context: ./
    # depends_on:
      # - tunnel-3
      # - docker-auth_server-1
      # - docker-auth_server-2
      # - docker-auth_server-3
      # - docker-web_app-1
      # - postgres_container
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.75'
          memory: 512M
        reservations:
          cpus: '0.50'
          memory: 100M

    env_file: .env
    image: nginx:mainline-alpine3.19
    networks:
      - front-tier
      - back-tier
    ports:
    # These ports are in format <host-port>:<container-port>
      - '${PROXY_WEB_PORT}:${PROXY_WEB_PORT}' # Public HTTP Port
      - '${WEB_HTTPS_PORT}:${WEB_HTTPS_PORT}' # Public HTTPS Port
      # - '${ADM_PORT}:${ADM_PORT}' # Admin web Port
      # - '${PORT1}:${PORT1}' # Public HTTP Port
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./mime.types:/etc/nginx/mime.types
      - ../proxy/nginx:/var/log/nginx
      - ../otto/:/home/crater
